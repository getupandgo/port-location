version: '2'

vars:
  BIN_DIR: '{{ default "bin" .BUILD_BIN_DIR }}'
  VERSION: 0.1

tasks:
  build_bin:
    desc: "build binaries in {{ .BIN_DIR }}"
    cmds:
      - mkdir -p "{{ .BIN_DIR }}"
      - go build -o "{{ .BIN_DIR }}/" ./cmd/...

  run_clientapi_bin:
    desc: "runs binary with config file provided in API_CONFIG_PATH"
    deps: [build_bin]
    env:
      CONFIG_PATH: '{{ default "cmd/clientapi/config.local.yaml" .API_CONFIG_PATH }}'
      CONFIG_PRINT: pretty
    cmds:
      - "{{ .BIN_DIR }}/clientapi"

  run_portdomain_bin:
    desc: "runs binary with config file provided in API_CONFIG_PATH"
    deps: [build_bin]
    env:
      CONFIG_PATH: '{{ default "cmd/portdomain/config.local.yaml" .API_CONFIG_PATH }}'
      CONFIG_PRINT: pretty
    cmds:
      - "{{ .BIN_DIR }}/portdomain"

  compose_up:
    desc: "runs binary with config file provided in API_CONFIG_PATH"
    deps: [portdomain_image,clientapi_image]
    cmds:
      - docker-compose -f deploy/docker-compose.yml up --force-recreate

  generate:
    desc: "runs go generate"
    status:
      - sh -c '[ ! -z $SKIP_GENERATE ]'
    cmds:
      - go generate -x ./...

  lint:
    desc: "Run linters"
    cmds:
      - golangci-lint run --deadline=10m  --color always ./...
      - prototool lint ./api/proto
      - prototool format -l ./api/proto

  test_integration:
    desc: "Run integration tests"
    cmds:
      - docker-compose -f deploy/docker-compose-test.yml up --force-recreate -d
      - CGO_ENABLED=1 MIGRATIONS_PATH="file://{{ .PWD }}/migrations" go test -race -p=1 -count=1 ./internal/... || true

  gen_grpc:
    desc: "Generate go files for gRPC"
    cmds:
      - prototool format -w
      - prototool generate .

  portdomain_image:
    cmds:
      - docker build -f build/package/portdomain/Dockerfile -t getupandgo/portdomain:{{.VERSION}} .

  clientapi_image:
    cmds:
      - docker build -f build/package/clientapi/Dockerfile -t getupandgo/clientapi:{{.VERSION}} .